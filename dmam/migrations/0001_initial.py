# Generated by Django 2.0 on 2019-07-23 15:24

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('entm', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DMABaseinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dma_no', models.CharField(max_length=50, unique=True, verbose_name='分区编号')),
                ('dma_name', models.CharField(max_length=50, unique=True, verbose_name='分区名称')),
                ('pepoles_num', models.CharField(blank=True, max_length=50, null=True, verbose_name='服务人口')),
                ('acreage', models.CharField(blank=True, max_length=50, null=True, verbose_name='服务面积')),
                ('user_num', models.CharField(blank=True, max_length=50, null=True, verbose_name='用户数量')),
                ('pipe_texture', models.CharField(blank=True, max_length=50, null=True, verbose_name='管道材质')),
                ('pipe_length', models.CharField(blank=True, max_length=50, null=True, verbose_name='管道总长度(m)')),
                ('pipe_links', models.CharField(blank=True, max_length=50, null=True, verbose_name='管道连接总数(个)')),
                ('pipe_years', models.CharField(blank=True, max_length=50, null=True, verbose_name='管道最长服务年限(年)')),
                ('pipe_private', models.CharField(blank=True, max_length=50, null=True, verbose_name='私人拥有水管长度(m)')),
                ('ifc', models.CharField(blank=True, max_length=250, null=True, verbose_name='IFC参数')),
                ('aznp', models.CharField(blank=True, max_length=250, null=True, verbose_name='AZNP')),
                ('night_use', models.CharField(blank=True, max_length=50, null=True, verbose_name='正常夜间用水量')),
                ('cxc_value', models.CharField(blank=True, max_length=50, null=True, verbose_name='产销差目标值')),
                ('creator', models.CharField(blank=True, max_length=50, null=True, verbose_name='负责人')),
                ('create_date', models.CharField(blank=True, max_length=30, null=True, verbose_name='建立日期')),
                ('belongto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dma', to='entm.Organizations')),
            ],
            options={
                'db_table': 'virvo_dmabaseinfo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DmaGisinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dma_no', models.CharField(max_length=50, unique=True, verbose_name='分区编号')),
                ('geodata', models.TextField(blank=True, null=True)),
                ('strokeColor', models.CharField(blank=True, max_length=100, null=True)),
                ('fillColor', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'virvo_dmagisinfo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DmaStation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_id', models.CharField(max_length=30)),
                ('meter_type', models.CharField(max_length=30)),
                ('station_type', models.CharField(max_length=30)),
                ('dmaid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dmam.DMABaseinfo')),
            ],
            options={
                'db_table': 'virvo_dmastation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Meter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serialnumber', models.CharField(blank=True, db_column='SerialNumber', max_length=30, null=True)),
                ('version', models.CharField(blank=True, db_column='version', max_length=30, null=True)),
                ('dn', models.CharField(blank=True, db_column='Dn', max_length=30, null=True)),
                ('metertype', models.CharField(blank=True, db_column='MeterType', max_length=30, null=True)),
                ('mtype', models.CharField(blank=True, db_column='Type', max_length=30, null=True)),
                ('manufacturer', models.CharField(blank=True, db_column='Manufacturer', max_length=30, null=True)),
                ('protocol', models.CharField(blank=True, db_column='Protocol', max_length=64, null=True)),
                ('R', models.CharField(blank=True, db_column='R', max_length=64, null=True)),
                ('q4', models.CharField(blank=True, db_column='Q4', max_length=64, null=True)),
                ('q3', models.CharField(blank=True, db_column='Q3', max_length=64, null=True)),
                ('q2', models.CharField(blank=True, db_column='Q2', max_length=64, null=True)),
                ('q1', models.CharField(blank=True, db_column='Q1', max_length=64, null=True)),
                ('check_cycle', models.CharField(blank=True, db_column='check cycle', max_length=64, null=True)),
                ('state', models.CharField(blank=True, db_column='state', max_length=64, null=True)),
                ('belongto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entm.Organizations')),
            ],
            options={
                'db_table': 'virvo_meter',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SimCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('simcardNumber', models.CharField(blank=True, db_column='SIMID', max_length=30, null=True)),
                ('isStart', models.CharField(blank=True, db_column='state', max_length=64, null=True)),
                ('iccid', models.CharField(blank=True, db_column='ICCID', max_length=30, null=True)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=30, null=True)),
                ('imsi', models.CharField(blank=True, db_column='IMSI', max_length=30, null=True)),
                ('operator', models.CharField(blank=True, db_column='operator', max_length=30, null=True)),
                ('simFlow', models.CharField(blank=True, db_column='simFlow', max_length=30, null=True)),
                ('openCardTime', models.CharField(blank=True, db_column='openCardTime', max_length=64, null=True)),
                ('endTime', models.CharField(blank=True, db_column='endTime', max_length=64, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, db_column='create_date')),
                ('update_date', models.DateTimeField(auto_now=True, db_column='update_date')),
                ('remark', models.CharField(blank=True, db_column='remark', max_length=64, null=True)),
                ('belongto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entm.Organizations')),
            ],
            options={
                'db_table': 'virvo_simcard',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=30, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=30, null=True)),
                ('usertype', models.CharField(blank=True, db_column='UserType', max_length=128, null=True)),
                ('madedate', models.CharField(blank=True, db_column='MadeDate', max_length=30, null=True)),
                ('lng', models.CharField(blank=True, db_column='Lng', max_length=30, null=True)),
                ('lat', models.CharField(blank=True, db_column='Lat', max_length=30, null=True)),
                ('coortype', models.CharField(blank=True, db_column='CoorType', max_length=30, null=True)),
                ('biguser', models.CharField(blank=True, db_column='biguser', max_length=30, null=True)),
                ('focus', models.CharField(blank=True, db_column='focus', max_length=30, null=True)),
                ('locate', models.CharField(blank=True, db_column='locate', max_length=30, null=True)),
                ('dmametertype', models.CharField(blank=True, db_column='MeterType', max_length=30, null=True)),
                ('belongto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='station', to='entm.Organizations')),
                ('dmaid', models.ManyToManyField(to='dmam.DMABaseinfo')),
                ('meter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dmam.Meter')),
            ],
            options={
                'db_table': 'virvo_station',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VCommunity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=128, null=True)),
                ('outter', models.CharField(blank=True, max_length=30, null=True)),
                ('commutid', models.IntegerField(blank=True, null=True)),
                ('amrs_commutid', models.IntegerField(blank=True, null=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('belongto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entm.Organizations')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='dmam.VCommunity')),
            ],
            options={
                'db_table': 'virvo_community',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VConcentrator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('commaddr', models.CharField(blank=True, max_length=50, null=True, verbose_name='通讯识别码')),
                ('address', models.CharField(blank=True, db_column='Address', max_length=128, null=True)),
                ('lng', models.CharField(blank=True, db_column='Lng', max_length=30, null=True)),
                ('lat', models.CharField(blank=True, db_column='Lat', max_length=30, null=True)),
                ('coortype', models.CharField(blank=True, db_column='CoorType', max_length=30, null=True)),
                ('model', models.CharField(blank=True, db_column='Model', max_length=64, null=True)),
                ('serialnumber', models.CharField(blank=True, db_column='SerialNumber', max_length=30, null=True)),
                ('manufacturer', models.CharField(blank=True, db_column='Manufacturer', max_length=64, null=True)),
                ('madedate', models.CharField(blank=True, db_column='MadeDate', max_length=30, null=True)),
                ('belongto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entm.Organizations')),
            ],
            options={
                'db_table': 'virvo_concentrator',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VPressure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('serialnumber', models.CharField(blank=True, db_column='SerialNumber', max_length=30, null=True)),
                ('version', models.CharField(blank=True, db_column='version', max_length=30, null=True)),
                ('dn', models.CharField(blank=True, db_column='Dn', max_length=30, null=True)),
                ('metertype', models.CharField(blank=True, db_column='MeterType', max_length=30, null=True)),
                ('mtype', models.CharField(blank=True, db_column='Type', max_length=30, null=True)),
                ('manufacturer', models.CharField(blank=True, db_column='Manufacturer', max_length=30, null=True)),
                ('protocol', models.CharField(blank=True, db_column='Protocol', max_length=64, null=True)),
                ('lng', models.CharField(blank=True, db_column='Lng', max_length=30, null=True)),
                ('lat', models.CharField(blank=True, db_column='Lat', max_length=30, null=True)),
                ('coortype', models.CharField(blank=True, db_column='CoorType', max_length=30, null=True)),
                ('check_cycle', models.CharField(blank=True, db_column='check cycle', max_length=64, null=True)),
                ('state', models.CharField(blank=True, db_column='state', max_length=64, null=True)),
                ('belongto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entm.Organizations')),
                ('simid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dmam.SimCard')),
            ],
            options={
                'db_table': 'virvo_pressure',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VSecondWater',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='Name', max_length=64, unique=True)),
                ('serialnumber', models.CharField(blank=True, db_column='SerialNumber', max_length=30, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=30, null=True)),
                ('version', models.CharField(blank=True, db_column='version', max_length=30, null=True)),
                ('manufacturer', models.CharField(blank=True, db_column='Manufacturer', max_length=30, null=True)),
                ('lng', models.CharField(blank=True, db_column='Lng', max_length=30, null=True)),
                ('lat', models.CharField(blank=True, db_column='Lat', max_length=30, null=True)),
                ('coortype', models.CharField(blank=True, db_column='CoorType', max_length=30, null=True)),
                ('product_date', models.CharField(blank=True, db_column='product date', max_length=64, null=True)),
                ('artist', models.CharField(blank=True, db_column='artist', max_length=64, null=True)),
                ('artistPreview', models.CharField(blank=True, db_column='artistPreview', max_length=256, null=True)),
                ('belongto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entm.Organizations')),
            ],
            options={
                'db_table': 'virvo_secondwater',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VWatermeter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('outter', models.CharField(blank=True, max_length=30, null=True)),
                ('waterid', models.IntegerField(blank=True, db_column='WaterId', null=True)),
                ('amrs_waterid', models.IntegerField(blank=True, db_column='Amrs WaterId', null=True)),
                ('wateraddr', models.CharField(blank=True, db_column='WaterAddr', max_length=30, null=True)),
                ('outter_communityid', models.IntegerField(blank=True, db_column='sx_wm_communityid', null=True)),
                ('numbersth', models.CharField(blank=True, db_column='NumberSth', max_length=30, null=True)),
                ('buildingname', models.CharField(blank=True, db_column='BuildingName', max_length=128, null=True)),
                ('roomname', models.CharField(blank=True, db_column='RoomName', max_length=128, null=True)),
                ('nodeaddr', models.CharField(blank=True, db_column='NodeAddr', max_length=30, null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=30, null=True)),
                ('usertel', models.CharField(blank=True, db_column='UserTel', max_length=30, null=True)),
                ('dn', models.CharField(blank=True, db_column='Dn', max_length=30, null=True)),
                ('serialnumber', models.CharField(blank=True, db_column='SerialNumber', max_length=30, null=True)),
                ('manufacturer', models.CharField(blank=True, db_column='Manufacturer', max_length=30, null=True)),
                ('madedate', models.CharField(blank=True, db_column='MadeDate', max_length=30, null=True)),
                ('ValveMeter', models.CharField(blank=True, db_column='ValveMeter', max_length=30, null=True)),
                ('installationsite', models.CharField(blank=True, db_column='InstallationSite', max_length=30, null=True)),
                ('belongto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entm.Organizations')),
                ('communityid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watermeter', to='dmam.VCommunity')),
                ('concentrator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dmam.VConcentrator')),
            ],
            options={
                'db_table': 'virvo_watermeter',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WaterUserType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usertype', models.CharField(max_length=256)),
                ('explains', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'virvo_waterusertype',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='vcommunity',
            name='vconcentrators',
            field=models.ManyToManyField(to='dmam.VConcentrator'),
        ),
        migrations.AddField(
            model_name='meter',
            name='simid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='meter', to='dmam.SimCard'),
        ),
        migrations.AlterUniqueTogether(
            name='dmabaseinfo',
            unique_together={('dma_no',)},
        ),
    ]
